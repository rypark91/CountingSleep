{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\portfolio\\\\2023\\\\CountingSleep\\\\countingsleep\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Title from './components/ItemCollection/Title';\nimport ItemGrid from './components/ItemCollection/ItemGrid';\nimport WriteMenu from './components/UI/WriteMenu';\nimport EditMenu from './components/UI/EditMenu';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itemCollection, setItemCollection] = useState([]);\n  const [visibleMenu, setVisibleMenu] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [editIdNum, setEditIdNum] = useState('');\n  const [activeClick, setClickable] = useState('');\n  const [avgSleepHour, setSleepHour] = useState(0);\n  const [avgSleepMinute, setSleepMinute] = useState(0);\n  const [createable, setCreateable] = useState(true);\n  const currentDate = new Date().toLocaleDateString().split(',');\n  useEffect(() => {\n    const fetchEntries = async () => {\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedEntries = [];\n      for (const key in responseData) {\n        loadedEntries.push({\n          sleepTime: responseData[key].sleepTIme,\n          wakeUpTime: responseData[key].wakeUpTime,\n          hour: responseData[key].hour,\n          minute: responseData[key].minute,\n          date: responseData[key].date,\n          id: responseData[key].id\n        });\n      }\n      setItemCollection(loadedEntries);\n      if (loadedEntries.length > 0) {\n        if (loadedEntries[0].date[0] === currentDate[0]) {\n          setCreateable(false);\n        }\n      }\n    };\n    fetchEntries();\n  }, []);\n  const addToFile = async collection => {\n    // PUT request using fetch with async/await\n    async function updateEntries() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(collection)\n      };\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n      const data = await response.json();\n      console.log(data);\n    }\n    updateEntries();\n  };\n  const removeFromFile = async collection => {\n    async function updateEntries() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(collection)\n      };\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n      const data = await response.json();\n      console.log(data);\n    }\n    updateEntries();\n  };\n  const saveToFile = async () => {\n    async function updateEntries() {\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(itemCollection)\n      };\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n      const data = await response.json();\n      console.log(data);\n    }\n    updateEntries();\n  };\n  const createHandlerItem = enteredItemData => {\n    let newList = [{\n      bedTime: enteredItemData.bedTime,\n      wakeUpTime: enteredItemData.wakeUpTime,\n      hour: enteredItemData.hour,\n      minute: enteredItemData.minute,\n      date: new Date().toLocaleDateString().split(','),\n      id: Math.random().toString()\n    }, ...itemCollection];\n    let totalHour = 0;\n    let totalMinute = 0;\n    for (let item of newList) {\n      totalHour += item.hour;\n      totalMinute += item.minute;\n    }\n    totalMinute += totalHour * 60;\n    let avgMinute = totalMinute / newList.length;\n    let finalHour = Math.floor(avgMinute / 60);\n    let finalMinute = avgMinute % 60;\n    setSleepHour(finalHour);\n    setSleepMinute(finalMinute);\n    setItemCollection(newList);\n    setVisibleMenu(false);\n    setClickable('');\n    if (newList.length > 0) {\n      if (newList[0].date[0] === currentDate[0]) {\n        setCreateable(false);\n      }\n    }\n    addToFile(newList);\n  };\n  const removeItemHander = id => {\n    var result = itemCollection.filter(rItem => {\n      return rItem.id !== id;\n    });\n    if (result.length !== 0) {\n      if (result[0].date[0] !== currentDate[0]) {\n        setCreateable(true);\n      }\n    }\n    let totalHour = 0;\n    let totalMinute = 0;\n    if (result.length !== 0) {\n      for (let item of result) {\n        totalHour += item.hour;\n        totalMinute += item.minute;\n      }\n      totalMinute += totalHour * 60;\n      let avgMinute = totalMinute / result.length;\n      let finalHour = Math.floor(avgMinute / 60);\n      let finalMinute = avgMinute % 60;\n      setSleepHour(finalHour);\n      setSleepMinute(finalMinute);\n    } else {\n      setSleepHour(0);\n      setSleepMinute(0);\n    }\n    setItemCollection(result);\n    removeFromFile(result);\n  };\n  const editItemHandler = editItem => {\n    var result = itemCollection.findIndex(rItem => rItem.id === editIdNum);\n    let newArray = itemCollection;\n    newArray[result].bedTime = editItem.bedTime;\n    newArray[result].wakeUpTime = editItem.wakeUpTime;\n    newArray[result].hour = editItem.hour;\n    newArray[result].minute = editItem.minute;\n    let totalHour = 0;\n    let totalMinute = 0;\n    for (let item of newArray) {\n      totalHour += item.hour;\n      totalMinute += item.minute;\n    }\n    totalMinute += totalHour * 60;\n    let avgMinute = totalMinute / newArray.length;\n    let finalHour = Math.floor(avgMinute / 60);\n    let finalMinute = avgMinute % 60;\n    setSleepHour(finalHour);\n    setSleepMinute(finalMinute);\n    setVisibleEdit(false);\n    setItemCollection(newArray);\n    saveToFile();\n  };\n  const toggleMenuHandler = () => {\n    setClickable('disableClick');\n    setVisibleMenu(true);\n  };\n  const toggleEditHandler = id => {\n    setEditIdNum(id);\n    setVisibleEdit(true);\n  };\n  const closeHandler = () => {\n    setVisibleEdit(false);\n    setVisibleMenu(false);\n    setClickable('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counting Sleep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clockContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          clickableClass: activeClick,\n          onToggleMenu: toggleMenuHandler,\n          create: createable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this), visibleMenu && /*#__PURE__*/_jsxDEV(WriteMenu, {\n          onCreateItem: createHandlerItem,\n          onClose: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 26\n        }, this), visibleEdit && /*#__PURE__*/_jsxDEV(EditMenu, {\n          onEditItem: editItemHandler,\n          onClose: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"enteriesContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Average sleep time: \", avgSleepHour, \" hour(s) \", avgSleepMinute, \" minute(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ItemGrid, {\n          items: itemCollection,\n          editToggled: visibleEdit,\n          clickableClass: activeClick,\n          onRemove: removeItemHander,\n          onEditToggle: toggleEditHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XTRuAOZs7/5iec9+YtlcmhIBiUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Title","ItemGrid","WriteMenu","EditMenu","App","itemCollection","setItemCollection","visibleMenu","setVisibleMenu","visibleEdit","setVisibleEdit","editIdNum","setEditIdNum","activeClick","setClickable","avgSleepHour","setSleepHour","avgSleepMinute","setSleepMinute","createable","setCreateable","currentDate","Date","toLocaleDateString","split","fetchEntries","response","fetch","ok","Error","responseData","json","loadedEntries","key","push","sleepTime","sleepTIme","wakeUpTime","hour","minute","date","id","length","addToFile","collection","updateEntries","requestOptions","method","headers","body","JSON","stringify","data","console","log","removeFromFile","saveToFile","createHandlerItem","enteredItemData","newList","bedTime","Math","random","toString","totalHour","totalMinute","item","avgMinute","finalHour","floor","finalMinute","removeItemHander","result","filter","rItem","editItemHandler","editItem","findIndex","newArray","toggleMenuHandler","toggleEditHandler","closeHandler"],"sources":["C:/WebDev/portfolio/2023/CountingSleep/countingsleep/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nimport Title from './components/ItemCollection/Title';\nimport ItemGrid from './components/ItemCollection/ItemGrid';\nimport WriteMenu from './components/UI/WriteMenu';\nimport EditMenu from './components/UI/EditMenu';\nimport './App.css';\n\nfunction App() {\n  const [itemCollection, setItemCollection] = useState([]);\n  const [visibleMenu, setVisibleMenu] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [editIdNum, setEditIdNum] = useState('');\n  const [activeClick, setClickable] = useState('');\n  const [avgSleepHour, setSleepHour] = useState(0);\n  const [avgSleepMinute, setSleepMinute] = useState(0);\n  const [createable, setCreateable] = useState(true);\n  const currentDate = new Date().toLocaleDateString().split(',');\n\n   \n  useEffect(() => {\n    const fetchEntries = async () => {\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json');\n      \n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n      \n      const responseData = await response.json();\n\n      const loadedEntries = [];\n\n      for (const key in responseData){\n        loadedEntries.push({\n          sleepTime: responseData[key].sleepTIme,\n          wakeUpTime: responseData[key].wakeUpTime,\n          hour: responseData[key].hour,\n          minute: responseData[key].minute,\n          date: responseData[key].date,\n          id: responseData[key].id\n          \n        });\n      }\n      setItemCollection(loadedEntries);\n      if(loadedEntries.length > 0){\n        if(loadedEntries[0].date[0] === currentDate[0]){\n          setCreateable(false);\n        }\n      }\n\n    };\n    fetchEntries();\n    }, []);\n   \n    const addToFile = async (collection) => {\n      // PUT request using fetch with async/await\n      async function updateEntries() {\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(collection),\n        };\n        const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n        const data = await response.json();\n        console.log(data);\n    }\n\n    updateEntries();\n \n  }  \n  const removeFromFile = async (collection) => {\n    async function updateEntries() {\n      const requestOptions = {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(collection),\n      };\n      const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n      const data = await response.json();\n      console.log(data);\n  }\n\n  updateEntries();\n\n}  \n  \n  const saveToFile = async () => {\n      async function updateEntries() {\n          const requestOptions = {\n              method: 'PUT',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(itemCollection),\n          };\n          const response = await fetch('https://countingsleep-e63e4-default-rtdb.firebaseio.com/sleepEntry.json', requestOptions);\n          const data = await response.json();\n          console.log(data);\n      }\n  \n      updateEntries();\n \n  }\n\n  \n\n\n  const createHandlerItem = (enteredItemData) => {\n    let newList = [{ bedTime: enteredItemData.bedTime,\n      wakeUpTime: enteredItemData.wakeUpTime,\n      hour: enteredItemData.hour,\n      minute: enteredItemData.minute,\n      date: new Date().toLocaleDateString().split(','),\n      id: Math.random().toString()}, ...itemCollection];\n    \n    let totalHour = 0;\n    let totalMinute = 0;\n    for(let item of newList){\n      totalHour += item.hour;\n      totalMinute += item.minute;\n    }\n    totalMinute += (totalHour * 60);\n    let avgMinute = totalMinute / newList.length;\n    let finalHour = Math.floor(avgMinute / 60);\n    let finalMinute = avgMinute % 60;\n    setSleepHour(finalHour);\n    setSleepMinute(finalMinute);\n    setItemCollection(newList);\n    setVisibleMenu(false);\n    setClickable('');\n    if(newList.length > 0){\n      if(newList[0].date[0] === currentDate[0]){\n        setCreateable(false);\n      }\n    }\n    addToFile(newList); \n \n  };\n  const removeItemHander = (id) => {\n    var result = itemCollection.filter(rItem => {\n      return rItem.id !== id;\n    });\n    if(result.length !== 0){\n      if(result[0].date[0] !== currentDate[0]){\n        setCreateable(true);\n      }\n    }\n    let totalHour = 0;\n    let totalMinute = 0;\n    if(result.length !== 0){\n      for(let item of result){\n        totalHour += item.hour;\n        totalMinute += item.minute;\n      }\n      totalMinute += (totalHour * 60);\n      let avgMinute = totalMinute / result.length;\n      let finalHour = Math.floor(avgMinute / 60);\n      let finalMinute = avgMinute % 60;\n      setSleepHour(finalHour);\n      setSleepMinute(finalMinute);\n    }\n    else{\n      setSleepHour(0);\n      setSleepMinute(0);\n    }\n    \n\n    setItemCollection(result);\n    removeFromFile(result);\n  }\n  const editItemHandler = (editItem) => {\n    \n    var result = itemCollection.findIndex(rItem => rItem.id === editIdNum);\n    \n    let newArray = itemCollection;\n    \n    newArray[result].bedTime = editItem.bedTime;\n    newArray[result].wakeUpTime = editItem.wakeUpTime;\n    newArray[result].hour = editItem.hour; \n    newArray[result].minute = editItem.minute;\n    let totalHour = 0;\n    let totalMinute = 0;\n    for(let item of newArray){\n      totalHour += item.hour;\n      totalMinute += item.minute;\n    }\n    totalMinute += (totalHour * 60);\n    let avgMinute = totalMinute / newArray.length;\n    let finalHour = Math.floor(avgMinute / 60);\n    let finalMinute = avgMinute % 60;\n    setSleepHour(finalHour);\n    setSleepMinute(finalMinute);\n\n    setVisibleEdit(false);\n    setItemCollection(newArray);\n    saveToFile();\n  }\n  const toggleMenuHandler = () => {\n    setClickable('disableClick');\n    setVisibleMenu(true);\n  }\n  const toggleEditHandler = (id) => {\n    setEditIdNum(id);\n    setVisibleEdit(true);\n    \n  }\n\n  const closeHandler = () => {\n    setVisibleEdit(false);\n    setVisibleMenu(false);\n    setClickable('');\n  }\n  \n  \n  return (\n    <div className=\"App\">\n      <h1>Counting Sleep</h1>\n      <div className=\"mainContainer\">\n        <div className=\"clockContainer\">\n        <Title \n        clickableClass={activeClick}\n        onToggleMenu={toggleMenuHandler}\n        create={createable}/>\n        { visibleMenu && <WriteMenu onCreateItem={createHandlerItem} onClose={closeHandler}/>}\n        { visibleEdit && <EditMenu onEditItem={editItemHandler} onClose={closeHandler}/>}\n\n        </div>\n        <div className=\"enteriesContainer\">\n          \n          <h4>Average sleep time: {avgSleepHour} hour(s) {avgSleepMinute} minute(s)</h4>\n          <ItemGrid\n      items={itemCollection}\n      editToggled={visibleEdit}\n      clickableClass={activeClick}\n      onRemove={removeItemHander} \n      onEditToggle={toggleEditHandler}/>\n            \n           \n          \n    \n        </div>\n      </div>\n      \n      \n      {/* <ItemGrid\n      items={itemCollection}\n      editToggled={visibleEdit}\n      clickableClass={activeClick}\n      onRemove={removeItemHander} \n      onEditToggle={toggleEditHandler}/> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}