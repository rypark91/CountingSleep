{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\portfolio\\\\2023\\\\CountingSleep\\\\countingsleep\\\\src\\\\components\\\\UI\\\\WriteMenu.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from './WriteMenu.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WriteMenu = props => {\n  _s();\n  const [toBedTime, setToBedTime] = useState('');\n  const [wakeUpTime, setWakeUpTime] = useState('');\n  const bedChangeHandler = event => {\n    if (event.target.key === 'Enter') {\n      console.log(\"Key entered\");\n    }\n    setToBedTime(event.target.value);\n  };\n  const wakeChangeHandler = event => {\n    if (event.target.key === 'Enter') {\n      console.log(\"Key entered\");\n    }\n    setWakeUpTime(event.target.value);\n  };\n  let disabled = false; //!(enteredMessage.length > 0);\n  let op = 0.5;\n  if (!disabled) {\n    op = 1;\n  }\n  const submitHandler = event => {\n    event.preventDefault();\n    let tempBedTime = toBedTime.split(\":\");\n    let hourBed = tempBedTime[0];\n    let minuteBed = tempBedTime[1];\n    let tempBedHour = Number(hourBed);\n    let tempBedMinute = Number(minuteBed);\n    let tempWakeTime = wakeUpTime.split(\":\");\n    let hourWake = tempWakeTime[0];\n    let minuteWake = tempWakeTime[1];\n    ;\n    let tempWakeHour = Number(hourWake);\n    let tempWakeMinute = Number(minuteWake);\n    let mBed = \"AM\";\n    let mWake = \"AM\";\n    if (tempBedHour >= 12) {\n      mBed = \"PM\";\n    }\n    if (tempWakeHour >= 12) {\n      mWake = \"PM\";\n    }\n    let numberOfHours = 0;\n    let numberOfMinutes = 0;\n    while (tempBedHour !== tempWakeHour || tempBedMinute !== tempWakeMinute) {\n      tempBedMinute++;\n      numberOfMinutes++;\n      if (tempBedMinute === 60) {\n        tempBedMinute = 0;\n        tempBedHour++;\n      }\n      if (numberOfMinutes === 60) {\n        numberOfMinutes = 0;\n        numberOfHours++;\n      }\n      if (tempBedHour === 24) {\n        tempBedHour = 0;\n      }\n    }\n    let newBedHour = Number(hourBed) % 12;\n    let newWakeHour = Number(hourWake) % 12;\n    if (newBedHour === 0) {\n      newBedHour = 12;\n    }\n    if (newWakeHour === 0) {\n      newWakeHour = 12;\n    }\n    let finalBedTime = newBedHour + \":\" + minuteBed + mBed;\n    let finalWakeTime = newWakeHour + \":\" + minuteWake + mWake;\n    const itemData = {\n      bedTime: finalBedTime,\n      wakeUpTime: finalWakeTime,\n      hour: numberOfHours,\n      minute: numberOfMinutes\n    };\n    props.onCreateItem(itemData);\n    setToBedTime(\"\");\n    setWakeUpTime(\"\");\n  };\n  const closeHandler = event => {\n    event.preventDefault();\n    props.onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.modal,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Bed Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"bedtime\",\n        onChange: bedChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Wake Up Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"waketime\",\n        onChange: wakeChangeHandler,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: disabled,\n        style: {\n          opacity: op\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeHandler,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n//sources:\n//https://stackoverflow.com/questions/60008415/react-js-prevent-line-breaks-or-submit-on-enter-in-the-text-area\n_s(WriteMenu, \"+lLKeAWXcG7tKLRSGgYBJK13+pk=\");\n_c = WriteMenu;\nexport default WriteMenu;\nvar _c;\n$RefreshReg$(_c, \"WriteMenu\");","map":{"version":3,"names":["useState","classes","WriteMenu","props","toBedTime","setToBedTime","wakeUpTime","setWakeUpTime","bedChangeHandler","event","target","key","console","log","value","wakeChangeHandler","disabled","op","submitHandler","preventDefault","tempBedTime","split","hourBed","minuteBed","tempBedHour","Number","tempBedMinute","tempWakeTime","hourWake","minuteWake","tempWakeHour","tempWakeMinute","mBed","mWake","numberOfHours","numberOfMinutes","newBedHour","newWakeHour","finalBedTime","finalWakeTime","itemData","bedTime","hour","minute","onCreateItem","closeHandler","onClose","modal","content","opacity"],"sources":["C:/WebDev/portfolio/2023/CountingSleep/countingsleep/src/components/UI/WriteMenu.js"],"sourcesContent":["import {  useState } from \"react\";\r\n\r\n\r\nimport classes from './WriteMenu.module.css';\r\n\r\nconst WriteMenu = (props) => {\r\n\r\n    const [toBedTime, setToBedTime] = useState('');\r\n    const [wakeUpTime, setWakeUpTime] = useState('');\r\n\r\n   \r\n    const bedChangeHandler = (event) => {\r\n        if(event.target.key === 'Enter'){\r\n            console.log(\"Key entered\")\r\n        }\r\n        setToBedTime(event.target.value);\r\n    };\r\n    const wakeChangeHandler = (event) => {\r\n        if(event.target.key === 'Enter'){\r\n            console.log(\"Key entered\")\r\n        }\r\n        setWakeUpTime(event.target.value);\r\n    };\r\n\r\n    let disabled = false;//!(enteredMessage.length > 0);\r\n    let op = 0.5;\r\n    if(!disabled){\r\n        op = 1;\r\n\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        let tempBedTime = toBedTime.split(\":\");\r\n        let hourBed = tempBedTime[0];\r\n        let minuteBed = tempBedTime[1];\r\n        let tempBedHour = Number(hourBed);\r\n        let tempBedMinute = Number(minuteBed);\r\n\r\n        let tempWakeTime = wakeUpTime.split(\":\");\r\n        let hourWake = tempWakeTime[0];\r\n        let minuteWake = tempWakeTime[1];;\r\n        let tempWakeHour = Number(hourWake);\r\n        let tempWakeMinute = Number(minuteWake);\r\n\r\n        let mBed = \"AM\";\r\n        let mWake = \"AM\";\r\n        if(tempBedHour >= 12){\r\n            mBed = \"PM\";\r\n        }\r\n        if(tempWakeHour >= 12){\r\n            mWake = \"PM\";\r\n        }\r\n        \r\n        let numberOfHours = 0;\r\n        let numberOfMinutes = 0;\r\n\r\n\r\n        while((tempBedHour !== tempWakeHour) || (tempBedMinute !== tempWakeMinute)){\r\n            tempBedMinute++;\r\n            numberOfMinutes++;\r\n            if(tempBedMinute === 60){\r\n                tempBedMinute = 0;\r\n                tempBedHour++;\r\n            }\r\n            if(numberOfMinutes === 60){\r\n                numberOfMinutes = 0;\r\n                numberOfHours++;\r\n            }\r\n            if(tempBedHour === 24){\r\n                tempBedHour = 0;\r\n            }\r\n        }\r\n        let newBedHour = Number(hourBed) % 12;\r\n        let newWakeHour = Number(hourWake) % 12;\r\n        if(newBedHour === 0){\r\n            newBedHour = 12;\r\n        }\r\n        if(newWakeHour === 0){\r\n            newWakeHour = 12;\r\n        }\r\n        let finalBedTime = newBedHour + \":\" + minuteBed + mBed;\r\n        let finalWakeTime = newWakeHour + \":\" + minuteWake + mWake;\r\n        const itemData = {\r\n\r\n            bedTime: finalBedTime,\r\n            wakeUpTime: finalWakeTime,\r\n            hour: numberOfHours,\r\n            minute: numberOfMinutes\r\n        };\r\n        props.onCreateItem(itemData);\r\n\r\n        setToBedTime(\"\");\r\n        setWakeUpTime(\"\")\r\n    }\r\n    const closeHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onClose();\r\n    } \r\n    return (\r\n    <div className={classes.modal}>\r\n        <form onSubmit={submitHandler} className={classes.content}>\r\n            <h3>Create Entry</h3>\r\n\r\n            <label>Enter Bed Time:</label>\r\n            <input\r\n                type=\"time\" name=\"bedtime\"\r\n                onChange={bedChangeHandler}\r\n                required/><br/>\r\n            <label>Enter Wake Up Time:</label>\r\n            <input\r\n                type=\"time\" name=\"waketime\"\r\n                onChange={wakeChangeHandler}\r\n                required/><br/>    \r\n\r\n\r\n            <button type=\"submit\" disabled={disabled} style={{opacity: op}}>Submit</button>\r\n            <button onClick={closeHandler}>Close</button>\r\n        </form>\r\n    </div>\r\n    );\r\n};\r\n\r\n//sources:\r\n//https://stackoverflow.com/questions/60008415/react-js-prevent-line-breaks-or-submit-on-enter-in-the-text-area\r\n\r\n\r\n\r\nexport default WriteMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}